apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: gogs
    name: gogs
  spec:
    replicas: 1
    selector:
      application: gogs
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          application: gogs
      spec:
        containers:
        - env:
          - name: GOGS_SERVER__ROOT_URL
            value: http://gogs-gogs.{{ osm_default_subdomain }}
          - name: ADMIN_USER_EMAIL
            value: gogsadmin@gogs.local
          - name: ADMIN_USER_PASSWORD
            value: {{ demo_gogs_admin_password }}
          - name: GOGS_SERVER__PROTOCOL
            value: http
          - name: GOGS_OAUTH_OPENSHIFT__ENABLED
            value: "true"
          - name: ADMIN_USER_CREATE
            value: "true"
          - name: GOGS_OAUTH_OPENSHIFT__TOKEN_URL
            value: https://{{ openshift_master_cluster_public_hostname }}/oauth/token
          - name: GOGS_OAUTH_OPENSHIFT__SCOPES
            value: https://{{ openshift_master_cluster_public_hostname }}/console/user
          - name: GOGS_OAUTH_OPENSHIFT__AUTH_URL
            value: https://{{ openshift_master_cluster_public_hostname }}/oauth/authorize
          - name: GOGS_WEBHOOK__TASK_INTERVAL
            value: "true"
          - name: GOGS_WEBHOOK__SKIP_TLS_VERIFY
            value: "true"
          - name: GOGS_SERVER__DOMAIN
            value: gogs-gogs.{{ osm_default_subdomain }}
          - name: ADMIN_USER_NAME
            value: {{ demo_gogs_admin_username }}
          - name: GOGS_OAUTH_TWITTER__ENABLED
            value: "false"
          - name: GOGS_OAUTH__ENABLED
            value: "true"
          - name: GOGS_OAUTH_OPENSHIFT__CLIENT_ID
            value: {{ demo_gogs_openshift_oauth_client_id }}
          - name: GOGS_REPOSITORY__ROOT
            value: /opt/gogs/data/gogs-repositories
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: fabric8/gogs:0.6.1
          imagePullPolicy: IfNotPresent
          name: gogs
          ports:
          - containerPort: 3000
            name: http
            protocol: TCP
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/gogs/data
            name: gogs-pvol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gogs-pvol
          persistentVolumeClaim:
            claimName: gogs-claim
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: gogs
    name: gogs
  spec:
    ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      application: gogs
    sessionAffinity: None
    type: LoadBalancer
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for gogs http service.
    labels:
      application: gogs
    name: gogs
  spec:
    host: gogs-gogs.{{ osm_default_subdomain }}
    to:
      kind: Service
      name: gogs
