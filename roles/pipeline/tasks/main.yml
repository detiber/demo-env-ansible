---
- name: Create the pipeline builder SA
  shell: >
    echo '{"kind": "ServiceAccount", "apiVersion": "v1", "metadata": {"name": "pipeline-builder", "namespace": "default" }}' | oc create -f -
  register: create_sa
  changed_when: "{{ create_sa.rc == 0 }}"
  failed_when: "{{ create_sa.rc == 1 and 'already exists' not in create_sa.stderr }}"

- name: Add the system:image-puller role
  command: >
    oadm policy add-cluster-role-to-user system:image-puller system:serviceaccount:default:pipeline-builder
  when: "{{ create_sa | changed }}"

# TODO: determine the proper permissions rather than adding cluster-admin
- name: Add the cluter-admin role
  command: >
    oadm policy add-cluster-role-to-user cluster-admin system:serviceaccount:default:pipeline-builder
  when: "{{ create_sa | changed }}"

- name: Create projects
  command: oadm new-project {{ item }}
  with_items: "{{ demo_pipeline_projects }}"
  register: pipeline_projects
  failed_when: "{{ pipeline_projects.rc == 1 and 'already exists' not in pipeline_projects.stderr }}"
  changed_when: "{{ pipeline_projects.rc == 0 }}"

- name: Add admin users to projects
  command: oc policy add-role-to-user -n {{ item.item }} admin {{ demo_project_admin }}
  with_items: "{{ create_projects.results }}"

- name: Add view users to projects
  command: oc policy add-role-to-user -n {{ item.item }} view {{ demo_project_view }}
  with_items: "{{ create_projects.results }}"

- name: Create the git secret
  command: oc secrets new-basicauth git-secret --username={{ demo_github_user }} --password={{ demo_github_password }} -n {{ item }}
  with_items:
  - "{{ demo_pipeline_projects.0 }}"
  register: git_secret
  failed_when: "{{ git_secret.rc == 1 and 'already exists' not in git_secret.stderr }}"
  changed_when: "{{ git_secret.rc == 0 }}"

- name: Add the git secret to the builder service account
  command: oc secrets add serviceaccount/builder secrets/git-secret -n {{ item }}
  with_items:
  - "{{ demo_pipeline_projects.0 }}"
  register: add_git_secret
