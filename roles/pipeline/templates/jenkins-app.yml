apiVersion: "v1"
kind: "List"
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: jenkins
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      name: "jenkins"
    name: "jenkins"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - name: "http"
      port: 80
      protocol: "TCP"
      targetPort: 8080
    selector:
      name: "jenkins"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      name: "jenkins"
    name: "jenkins-jnlp"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - name: "agent"
      port: 50000
      protocol: "TCP"
      targetPort: 50000
    selector:
      name: "jenkins"
    type: "LoadBalancer"
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      keynote: "2016"
      name: jenkins
    name: jenkins
    namespace: jenkins
  spec:
    replicas: 1
    selector:
      name: jenkins
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: jenkins
        name: jenkins
      spec:
        containers:
        - env:
          - name: OPENSHIFT_TOKEN
            value: {{ pipeline_token.stdout }}
          - name: GITHUB_USER
            value: {{ demo_pipeline_github_user }}
          - name: GITHUB_PASSWORD
            value: {{ demo_pipeline_github_password }}
          - name: HTTP_PROXY
          - name: HTTPS_PROXY
          - name: JENKINS_PASSWORD
            value: {{ demo_pipeline_admin_user }}
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          imagePullPolicy: Always
          image: jenkins
          name: jenkins
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 50000
            name: agent
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: jenkins
        serviceAccountName: jenkins
        terminationGracePeriodSeconds: 60
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: jenkins:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      keynote: "2016"
      name: jenkins
    name: jenkins
  spec:
    host: jenkins-jenkins.{{ osm_default_subdomain }}
    to:
      name: jenkins
