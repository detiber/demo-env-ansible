{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "MasterSGs": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "NodeSGs": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "InfraSGs": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "MasterExtElbSGs": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "InfraElbSGs": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "MasterIntElbSGs": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "Subnets": {
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "MasterApiPort": {
      "Type": "Number"
    },
    "Route53HostedZone": {
      "Type": "String"
    },
    "MasterClusterHostname": {
      "Type": "String"
    },
    "MasterClusterPublicHostname": {
      "Type": "String"
    },
    "AppWildcardDomain": {
      "Type": "String"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "MasterInstanceType": {
      "Type": "String"
    },
    "MasterImageId": {
      "Type": "AWS::EC2::Image::Id"
    },
    "MasterUserData": {
      "Type": "String"
    },
    "MasterRootVolSize": {
      "Type": "String",
      "Default": "30"
    },
    "MasterDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "MasterRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "MasterDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraInstanceType": {
      "Type": "String"
    },
    "InfraImageId": {
      "Type": "AWS::EC2::Image::Id"
    },
    "InfraUserData": {
      "Type": "String"
    },
    "InfraRootVolSize": {
      "Type": "String",
      "Default": "30"
    },
    "InfraDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "InfraRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "InfraDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "NodeInstanceType": {
      "Type": "String"
    },
    "NodeImageId": {
      "Type": "AWS::EC2::Image::Id"
    },
    "NodeUserData": {
      "Type": "String"
    },
    "NodeRootVolSize": {
      "Type": "String",
      "Default": "30"
    },
    "NodeDockerVolSize": {
      "Type": "String",
      "Default": "25"
    },
    "NodeRootVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "NodeDockerVolType": {
      "Type": "String",
      "Default": "gp2"
    },
    "NumMasters": {
      "Type": "Number",
      "AllowedValues": ["1", "3"]
    },
    "NumInfra": {
      "Type": "Number",
      "MinValue": "1"
    },
    "NumNodes": {
      "Type": "Number",
      "MinValue": "1"
    },
    "MasterInstanceProfile": {
      "Type": "String",
      "Default": ""
    },
    "NodeInstanceProfile": {
      "Type": "String",
      "Default": ""
    }
  },
  "Conditions": {
    "SetMasterInstanceProfile": {"Fn::Not": [{"Fn::Equals" : [{"Ref" : "MasterInstanceProfile"}, ""]}]},
    "SetNodeInstanceProfile": {"Fn::Not": [{"Fn::Equals" : [{"Ref" : "MasterInstanceProfile"}, ""]}]}
  },
  "Resources": {
    "MasterIntElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": "true",
        "HealthCheck": {
          "HealthyThreshold" : "2",
          "Interval" : "5",
          "Target" : { "Fn::Join": [ ":", [ "TCP", { "Ref": "MasterApiPort" } ] ] },
          "Timeout" : "2",
          "UnhealthyThreshold" : "2"
        },
        "ConnectionSettings":{
          "IdleTimeout": 3600
        },
        "Listeners":[
          {
            "InstancePort": { "Ref" : "MasterApiPort" },
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": { "Ref" : "MasterApiPort" },
            "Protocol": "TCP"
          }
        ],
        "Scheme": "internal",
        "SecurityGroups": { "Ref": "MasterIntElbSGs" },
        "Subnets": {"Ref": "Subnets"}
      }
    },
    "MasterExtElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": "true",
        "HealthCheck": {
          "HealthyThreshold" : "2",
          "Interval" : "5",
          "Target" : { "Fn::Join": [ ":", [ "TCP", { "Ref": "MasterApiPort" } ] ] },
          "Timeout" : "2",
          "UnhealthyThreshold" : "2"
        },
        "ConnectionSettings":{
          "IdleTimeout": 3600
        },
        "Listeners":[
          {
            "InstancePort": { "Ref" : "MasterApiPort" },
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": { "Ref" : "MasterApiPort" },
            "Protocol": "TCP"
          }
        ],
        "SecurityGroups": { "Ref": "MasterExtElbSGs" },
        "Subnets": { "Ref": "Subnets" }
      }
    },
    "InfraElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": "true",
        "HealthCheck": {
          "HealthyThreshold" : "2",
          "Interval" : "5",
          "Target" : "TCP:443",
          "Timeout" : "2",
          "UnhealthyThreshold" : "2"
        },
        "Listeners":[
          {
            "InstancePort": "443",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "443",
            "Protocol": "TCP"
          },
          {
            "InstancePort": "80",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "80",
            "Protocol": "TCP"
          }
        ],
        "SecurityGroups": { "Ref": "InfraElbSGs" },
        "Subnets": { "Ref": "Subnets"}
      }
    },
    "Route53Records": {
      "Type": "AWS::Route53::RecordSetGroup",
      "DependsOn": [
        "InfraElb",
        "MasterIntElb",
        "MasterExtElb"
      ],
      "Properties": {
        "HostedZoneName": { "Ref": "Route53HostedZone" },
        "RecordSets": [
          {
            "Name": { "Ref": "MasterClusterPublicHostname" },
            "Type": "A",
            "AliasTarget": {
                "HostedZoneId": { "Fn::GetAtt" : ["MasterExtElb", "CanonicalHostedZoneNameID"] },
                "DNSName": { "Fn::GetAtt" : ["MasterExtElb","CanonicalHostedZoneName"] }
            }
          },
          {
            "Name": { "Ref": "MasterClusterHostname" },
            "Type": "A",
            "AliasTarget": {
                "HostedZoneId": { "Fn::GetAtt" : ["MasterIntElb", "CanonicalHostedZoneNameID"] },
                "DNSName": { "Fn::GetAtt" : ["MasterIntElb","DNSName"] }
            }
          },
          {
            "Name": { "Ref": "AppWildcardDomain" },
            "Type": "A",
            "AliasTarget": {
                "HostedZoneId": { "Fn::GetAtt" : ["InfraElb", "CanonicalHostedZoneNameID"] },
                "DNSName": { "Fn::GetAtt" : ["InfraElb","CanonicalHostedZoneName"] }
            }
          }
        ]
      }
    },
    "InfraLC": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": "true",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "InfraRootVolSize"},
              "VolumeType": {"Ref": "InfraRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "InfraDockerVolSize"},
              "VolumeType": {"Ref": "InfraDockerVolType"}
            }
          }
        ],
        "ImageId": {"Ref": "InfraImageId"},
        "InstanceType": {"Ref": "InfraInstanceType"},
        "KeyName": {"Ref": "KeyName"},
        "SecurityGroups": { "Ref": "InfraSGs" },
        "UserData": {"Ref": "InfraUserData"},
        "IamInstanceProfile": {
	  "Fn::If" : [
	    "SetNodeInstanceProfile",
	    { "Ref": "NodeInstanceProfile" },
	    { "Ref": "AWS::NoValue" }
	  ]
	}
      }
    },
    "NodeLC": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": "true",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeRootVolSize"},
              "VolumeType": {"Ref": "NodeRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "NodeDockerVolSize"},
              "VolumeType": {"Ref": "NodeDockerVolType"}
            }
          }
        ],
        "ImageId": {"Ref": "NodeImageId"},
        "InstanceType": {"Ref": "NodeInstanceType"},
        "KeyName": {"Ref": "KeyName"},
        "SecurityGroups": { "Ref": "NodeSGs" },
        "UserData": {"Ref": "NodeUserData"},
        "IamInstanceProfile": {
	  "Fn::If" : [
	    "SetNodeInstanceProfile",
	    { "Ref": "NodeInstanceProfile" },
	    { "Ref": "AWS::NoValue" }
	  ]
	}
      }
    },
    "MasterLC": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": "true",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "MasterRootVolSize"},
              "VolumeType": {"Ref": "MasterRootVolType"}
            }
          },
          {
            "DeviceName": "/dev/xvdb",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": {"Ref": "MasterDockerVolSize"},
              "VolumeType": {"Ref": "MasterDockerVolType"}
            }
          }
        ],
        "ImageId": {"Ref": "MasterImageId"},
        "InstanceType": {"Ref": "MasterInstanceType"},
        "KeyName": {"Ref": "KeyName"},
        "SecurityGroups": { "Ref": "MasterSGs" },
        "UserData": {"Ref": "MasterUserData"},
        "IamInstanceProfile": {
	  "Fn::If" : [
	    "SetMasterInstanceProfile",
	    { "Ref": "MasterInstanceProfile" },
	    { "Ref": "AWS::NoValue" }
	  ]
	}
      }
    },
    "InfraASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn": ["InfraLC"],
      "Properties": {
        "DesiredCapacity": {"Ref": "NumInfra"},
        "MinSize": {"Ref": "NumInfra"},
        "MaxSize": {"Ref": "NumInfra"},
        "LaunchConfigurationName": { "Ref": "InfraLC" },
        "LoadBalancerNames": [ { "Ref": "InfraElb" } ],
        "Tags": [
          { "Key": "host-type",
            "Value": "node",
            "PropagateAtLaunch": true
          },
          { "Key": "sub-host_type",
            "Value": "infra",
            "PropagateAtLaunch": true
          },
          { "Key": "Name",
            "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "infra-node"]]},
            "PropagateAtLaunch": true
          }
        ],
        "VPCZoneIdentifier": { "Ref": "Subnets" }
      }
    },
    "NodeASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn": ["NodeLC"],
      "Properties": {
        "DesiredCapacity": {"Ref": "NumNodes"},
        "MinSize": {"Ref": "NumNodes"},
        "MaxSize": {"Ref": "NumNodes"},
        "LaunchConfigurationName": { "Ref": "NodeLC" },
        "Tags": [
          { "Key": "host-type",
            "Value": "node",
            "PropagateAtLaunch": true
          },
          { "Key": "sub-host_type",
            "Value": "compute",
            "PropagateAtLaunch": true
          },
          { "Key": "Name",
            "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"},"app-node"]]},
            "PropagateAtLaunch": true
          }
        ],
        "VPCZoneIdentifier": { "Ref": "Subnets" }
      }
    },
    "MasterASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn": ["MasterLC"],
      "Properties": {
        "DesiredCapacity": {"Ref": "NumMasters"},
        "MinSize": {"Ref": "NumMasters"},
        "MaxSize": {"Ref": "NumMasters"},
        "LaunchConfigurationName": { "Ref": "MasterLC" },
        "LoadBalancerNames": [
          { "Ref": "MasterExtElb" },
          { "Ref": "MasterIntElb" }
        ],
        "Tags": [
          { "Key": "host-type",
            "Value": "master",
            "PropagateAtLaunch": true
          },
          { "Key": "sub-host_type",
            "Value": "default",
            "PropagateAtLaunch": true
          },
          { "Key": "Name",
            "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"},"master"]]},
            "PropagateAtLaunch": true
          }
        ],
        "VPCZoneIdentifier": { "Ref": "Subnets" }
      }
    }
  }
}
